#include <Wire.h> //libreria per utilizzare display lcd cinese
#include <LiquidCrystal_I2C.h>

#define I2C_ADDR 0x27 //inserire indirizzo i2c dello schermo lcd
#define BACKLIGHT_PIN 3
#define En_pin 2
#define Rw_pin 1
#define Rs_pin 0
#define D4_pin 4
#define D5_pin 5
#define D6_pin 6
#define D7_pin 7

LiquidCrystal_I2C lcd(I2C_ADDR,En_pin,Rw_pin,Rs_pin,D4_pin,D5_pin,D6_pin,D7_pin); //fine libreria display lcd cinese

#include <EEPROM.h>
int stato = 0;
int pulsanteAGG = 7;
int pulsanteSOTT = 6;
int pulsanteS = 5;
bool FIRST = true;
bool PRIMO = true;
bool PRIMAVOLTA = true;
float misura;
float ph;
float phnew;
float offset=21.56;
unsigned long before = 0;

//   lcd.clear(); istruzione per cancellare contenuto schermo lcd, vedere se usare
void setup() {

  lcd.begin(16,2);   //istruzione per inizializzare il display lcd
  lcd.setBacklightPin(BACKLIGHT_PIN,POSITIVE);
  lcd.setBacklight(HIGH); //blocco di istruzioni per accendere la retroilluminazione
  
  lcd.home ();    //mette il cursone nella posizione 0,0
  
  Serial.begin(9600);
pinMode(7, INPUT); //pin pulsante per aumentare il valore nel menu calibrazione
pinMode(6, INPUT); //pin pulsante per diminuire il valore nel menu calibrazione
pinMode(5, INPUT); //pin pulsante per salvare dati nella eeprom nel menu calibrazione
  pinMode(8, INPUT); //pin pulsante per cambiare menu

}

void loop() {
  delay(200);
  switch (stato) { //menu iniziale di benvenuto
    case 0:
      welcome();
    PRIMO = true;
        break; 
    case 10:        //menu di lettura ph
      lettura_ph();
    break; 
    case 100:       //menu di calibrazione manuale
    calibrazione();
    break; 
  
  }
}

void welcome() {
if (FIRST) {
Serial.println("Benvenuto"); //scrive benvenuto sul monitor seriale
     lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("Benvenuto"); //imposta il cursore in alto a sx e scrive benvenuto su lcd
FIRST = false;
  
}

if (PRIMAVOLTA) {
EEPROM.put(0,offset); //salva il valore di offset 21.56 nella eeprom, solo all'accensione
PRIMAVOLTA = false;
  
}
  if (digitalRead(8)) {
stato = 10; //premendo il tasto pin 8 passa al menu lettura
    delay(100);
  
}
}

void misph() {

// codice che fa la media
   for(int i=0; i<10; i++) { 
    misura += analogRead(A0);
    delay (10);  }
  
  misura = misura / 10.0; 

ph = (float)misura * (5.0/1024)*0.897;
  
  
  phnew= -5.70 * ph + offset;
  Serial.print("    pH:");  
  Serial.print(phnew, 2);
  Serial.println(" "); 

lcd.clear();
    lcd.setCursor(0,0); //replica ciò che fa sul monitor seriale, ovvero mi stampa su lcd il valore del ph rilevato
  lcd.print("valore  ph");
  lcd.setCursor(0,1);
  lcd.print(phnew);
    
/* codice che legge il ph da singola misurazione della tensione analogica
misura = analogRead(A0);
 ph = (float)misura * (5.0/1024)*0.897;
  
  
  phnew= -5.70 * ph + offset;
  Serial.print("    pH:");  
  Serial.print(phnew, 2);
  Serial.println(" ");
  
  delay(200); */
}

void lettura_ph() {
  
  if (FIRST==false) {
Serial.println("menù lettura ph");
   lcd.clear(); //cancella contenuto display
lcd.setCursor(0,0); //replica ciò che fa sul monitor seriale, ovvero mi stampa su lcd il valore del ph rilevato
  lcd.print("lettura ph");
  
EEPROM.get(0,offset); //legge il valore salvato nella eeprom
Serial.println(offset); //stampa il valore di offset salvato nella eeprom, alla prima accensione dovrebbe uscire 21.56 o comunque senza aver eseguito la calibrazione
lcd.setCursor(0,1);
lcd.print("offset =");
lcd.setCursor(10,1);
lcd.print(offset); //stampa su lcd il valore di offset salvato nella eeprom
  
FIRST = true; //stampa solo 1 volta il titolo del menu
  delay(1000);
}
  
  if (digitalRead(8)) {
stato = 100; //passa allo stato del menu calibrazione
    delay(100);
  
}

  if (digitalRead(5)) {
Serial.println(offset); //premendo il tasto collegato al pin 5 stampa il valore di offset
    lcd.setCursor(0,1);
lcd.print("offset =");
lcd.setCursor(10,1);
lcd.print(offset);
    delay(200);
  
}
  int diff;
  diff = millis() - before;
 
if (diff >= 1000)  {
 //inserire il codice per la lettura ph (inizio)
  misph();

  // codice lettura ph (fine)
  before = millis();
 } 
 } 
 
void scrittura(){ //funzione incaricata di scrivere sulla eeprom
 
 EEPROM.put(0, offset);
 Serial.println("scrittura OK");
 lcd.clear();
 lcd.setCursor(0,0);
lcd.print("calibrazione");
 lcd.setCursor(0,1);
lcd.print("scrittura OK");
delay(300);
stato=0;
}


void calibrazione() {

if (PRIMO) {
  Serial.println("calibrazione");
        Serial.println("offset=");
    Serial.println(offset); //stampa a terminale il valore preimpostato    
   

      lcd.setCursor(0,0);
         lcd.clear();
  lcd.print("calibrazione");
   lcd.setCursor(0,1);
lcd.print("offset = ");
lcd.setCursor(10,1);
lcd.print(offset);
        PRIMO = false;      
        
    }
    



  if (digitalRead(8)) {
stato = 0;
    delay(200);
 
}
 
 if (digitalRead(7) == HIGH) {
delay(100);
   offset = offset + 0.05;
   Serial.println(offset);
   lcd.clear();
   lcd.print("calibrazione");
   lcd.setCursor(0,1);
lcd.print("offset = ");
lcd.setCursor(10,1);
lcd.print(offset);
  }

 if (digitalRead(6) == HIGH) {
delay(100);
   offset = offset - 0.05;
   Serial.println(offset);
         lcd.clear();
   lcd.print("calibrazione");
   lcd.setCursor(0,1);
lcd.print("offset = ");
lcd.setCursor(10,1);
lcd.print(offset);
  
  }
   
  if (digitalRead(5)==HIGH){

 scrittura();
 delay(200);
 


}
 
 

}

  
